buildscript {
    ext {
        jettyVersion = '9.2.10.v20150310'
        openDolphinVersion = '1.0-RC1'
        jbossLogginVersion = '1.0.1.Final'
        itextVersion = '2.1.7'
        groovyVersion = '2.4.1'
        h2Version = '1.4.196'
        cglibNodepVersion = '2.2.2'
        sceneBuilderVersion = '8.2.0'
        lombokVersion = '1.18.24'
        springBootVersion = '1.5.6.RELEASE'
        controlsfxVersion = '8.40.13'
        spockVersion = '1.1-groovy-2.4'
        powerMockVersion = '1.7.1'
        j2modVersion = '2.3.6'
        tilesfxVersion = '1.4.9'
        medusaVersion = '7.9'
        mysqlVersion = '5.1.40'
        h2Version = '1.4.196'
        dynamoVersion = '1.0.3'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}


apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'eru'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url 'http://repo.maven.apache.org/maven2' }
    maven { url 'http://nexus.gluonhq.com/nexus/content/repositories/releases/' }
}

sourceSets {
    main {
        java { srcDirs = [] }
        groovy { srcDirs = ["src/main/java"] }
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter'
    compile "org.projectlombok:lombok:${lombokVersion}"
    compile "com.lowagie:itext:${itextVersion}"
    compile "org.open-dolphin:dolphin-client:${openDolphinVersion}"
    compile "org.open-dolphin:dolphin-client-javafx:${openDolphinVersion}"
    compile "org.open-dolphin:dolphin-shared:${openDolphinVersion}"
    compile "org.open-dolphin:dolphin-server:${openDolphinVersion}"
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile "com.h2database:h2:${h2Version}"
    compile "org.eclipse.jetty:jetty-servlets:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-server:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-servlet:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-http:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-continuation:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-security:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-webapp:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-xml:${jettyVersion}"
    compile "org.eclipse.jetty:jetty-io:${jettyVersion}"
    compile "org.codehaus.groovy:groovy-all:${groovyVersion}"
    compile "cglib:cglib-nodep:${cglibNodepVersion}"
    compile "com.gluonhq.scenebuilder:scenebuilder-all:${sceneBuilderVersion}"
    compile "org.controlsfx:controlsfx:${controlsfxVersion}"
    compile "com.ghgande:j2mod:${j2modVersion}"
    compile "eu.hansolo:tilesfx:${tilesfxVersion}"
    compile "eu.hansolo:Medusa:${medusaVersion}"
    compile "mysql:mysql-connector-java:${mysqlVersion}"
    compile "com.h2database:h2:${h2Version}"
    compile "com.github.assemblits:dynamo:${dynamoVersion}"

    //Testing
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile "org.spockframework:spock-spring:${spockVersion}"
    testCompile "org.spockframework:spock-core:${spockVersion}"
    testCompile "org.powermock:powermock-api-mockito:${powerMockVersion}"
    testCompile "org.powermock:powermock-module-junit4:${powerMockVersion}"
    testCompile "org.powermock:powermock-classloading-xstream:${powerMockVersion}"
}